const nodemailer = require("nodemailer");
const dotenv = require("dotenv");

// Load environment variables
dotenv.config();

const transporter = nodemailer.createTransporter({
  host: process.env.SMTP_HOST,
  port: parseInt(process.env.SMTP_PORT) || 465,
  secure: process.env.SMTP_SECURE === 'true' || true,
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASS,
  },
});

async function testSMTPConfiguration() {
  console.log('üîß Testing SMTP Configuration...');
  console.log('================================');
  
  // Display configuration (without sensitive data)
  console.log('üìã Configuration:');
  console.log(`   Host: ${process.env.SMTP_HOST || 'NOT SET'}`);
  console.log(`   Port: ${process.env.SMTP_PORT || 'NOT SET'}`);
  console.log(`   Secure: ${process.env.SMTP_SECURE || 'NOT SET'}`);
  console.log(`   User: ${process.env.SMTP_USER ? '***configured***' : 'NOT SET'}`);
  console.log(`   Pass: ${process.env.SMTP_PASS ? '***configured***' : 'NOT SET'}`);
  console.log(`   From: ${process.env.MAIL_FROM || 'NOT SET'}`);
  console.log('');

  // Check if all required variables are set
  const required = ['SMTP_HOST', 'SMTP_PORT', 'SMTP_USER', 'SMTP_PASS'];
  const missing = required.filter(key => !process.env[key]);
  
  if (missing.length > 0) {
    console.log('‚ùå Missing required environment variables:', missing.join(', '));
    console.log('');
    console.log('üí° Set these in your .env file or environment:');
    missing.forEach(key => {
      console.log(`   ${key}=your_value`);
    });
    process.exit(1);
  }

  try {
    // Test SMTP connection
    console.log('üîç Testing SMTP connection...');
    await transporter.verify();
    console.log('‚úÖ SMTP connection successful!');
    console.log('');

    // Send test email
    console.log('üìß Sending test email to siparrott@yahoo.co.uk...');
    
    const info = await transporter.sendMail({
      from: process.env.MAIL_FROM || `"EasyOTPAuth Test" <${process.env.SMTP_USER}>`,
      to: "siparrott@yahoo.co.uk",
      subject: "‚úÖ EasyOTPAuth SMTP Test Successful",
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
          <div style="background: #10b981; color: white; padding: 20px; border-radius: 8px; text-align: center; margin-bottom: 20px;">
            <h1 style="margin: 0; font-size: 24px;">‚úÖ SMTP Test Successful!</h1>
          </div>
          
          <div style="background: #f8fafc; padding: 20px; border-radius: 8px; border-left: 4px solid #10b981;">
            <h2 style="color: #1f2937; margin-top: 0;">üéâ Your EasyOTPAuth SMTP is working!</h2>
            <p style="color: #4b5563; line-height: 1.6;">
              This email confirms that your SMTP configuration is correctly set up and ready for production use.
            </p>
            
            <div style="margin: 20px 0;">
              <h3 style="color: #374151;">üìã Configuration Details:</h3>
              <ul style="color: #6b7280;">
                <li>SMTP Host: ${process.env.SMTP_HOST}</li>
                <li>SMTP Port: ${process.env.SMTP_PORT}</li>
                <li>Secure Connection: ${process.env.SMTP_SECURE}</li>
                <li>Test Time: ${new Date().toISOString()}</li>
              </ul>
            </div>
            
            <div style="background: #dbeafe; padding: 15px; border-radius: 6px; margin: 20px 0;">
              <strong style="color: #1e40af;">üöÄ Next Steps:</strong>
              <ol style="color: #1e40af; margin: 10px 0;">
                <li>Test the live OTP system at: <a href="https://www.easyotpauth.com/personal-test">https://www.easyotpauth.com/personal-test</a></li>
                <li>Try the client integration demo: <a href="https://www.easyotpauth.com/client-demo">https://www.easyotpauth.com/client-demo</a></li>
                <li>Use the API endpoints in your applications</li>
              </ol>
            </div>
          </div>
          
          <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
            <p style="color: #9ca3af; font-size: 14px;">
              Generated by EasyOTPAuth SMTP Test Script<br>
              <a href="https://www.easyotpauth.com" style="color: #2563eb;">www.easyotpauth.com</a>
            </p>
          </div>
        </div>
      `,
      text: `
‚úÖ EasyOTPAuth SMTP Test Successful!

Your SMTP configuration is working correctly and ready for production use.

Configuration Details:
- SMTP Host: ${process.env.SMTP_HOST}
- SMTP Port: ${process.env.SMTP_PORT}
- Secure Connection: ${process.env.SMTP_SECURE}
- Test Time: ${new Date().toISOString()}

Next Steps:
1. Test the live OTP system at: https://www.easyotpauth.com/personal-test
2. Try the client integration demo: https://www.easyotpauth.com/client-demo  
3. Use the API endpoints in your applications

Generated by EasyOTPAuth SMTP Test Script
https://www.easyotpauth.com
      `
    });

    console.log('üéâ Test email sent successfully!');
    console.log(`   Message ID: ${info.messageId}`);
    console.log(`   Preview URL: ${nodemailer.getTestMessageUrl(info) || 'N/A'}`);
    console.log('');
    console.log('üìß Check siparrott@yahoo.co.uk for the test email');
    console.log('');
    console.log('‚úÖ SMTP Configuration Test PASSED');
    console.log('üöÄ Your EasyOTPAuth system is ready for production!');
    
  } catch (error) {
    console.log('‚ùå SMTP Test Failed');
    console.log('');
    console.log('Error Details:');
    console.error(error);
    console.log('');
    console.log('üí° Troubleshooting:');
    console.log('   1. Verify your SMTP credentials are correct');
    console.log('   2. Check if your SMTP provider requires app-specific passwords');
    console.log('   3. Ensure your firewall allows SMTP connections');
    console.log('   4. Try with a different SMTP port (587 for STARTTLS)');
    
    process.exit(1);
  }
}

// Handle graceful shutdown
process.on('SIGINT', () => {
  console.log('\nüõë Test interrupted by user');
  process.exit(0);
});

process.on('unhandledRejection', (error) => {
  console.log('\n‚ùå Unexpected error:', error.message);
  process.exit(1);
});

// Run the test
testSMTPConfiguration();
